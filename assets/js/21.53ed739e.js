(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{501:function(s,n,a){"use strict";a.r(n);var e=a(30),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),a("p",[s._v("说起代理，我们很容易有一个概念，这里，我打一个比方。")]),s._v(" "),a("p",[s._v("大学时的小简学的是软件工程，但他不和大部分人一样死磕java，而且买了"),a("br"),s._v("\n一个服务器，自己研究搭造了一个无限流量的app，并将这个app以50元一个月"),a("br"),s._v("\n的价格出售给其他需要的同学，但是他发现这样赚钱还是太慢，于是就"),a("br"),s._v("\n以35元/月的价格招收代理，让代理来帮忙销售。这就是我们常说的代理。")]),s._v(" "),a("p",[s._v("那么代理模式是什么呢？"),a("br"),s._v("\n代理模式就是目标对象不想或无法被直接调用时，\n通过代理可以有效地控制客户端对被代理对象的直接访问，\n进而可以很好地隐藏和保护被代理对象。")]),s._v(" "),a("h3",{attrs:{id:"静态代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态代理"}},[s._v("#")]),s._v(" 静态代理")]),s._v(" "),a("h4",{attrs:{id:"简单代理-与被代理类功能一致"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单代理-与被代理类功能一致"}},[s._v("#")]),s._v(" 简单代理，与被代理类功能一致")]),s._v(" "),a("p",[s._v("我们想象如下一个场景。")]),s._v(" "),a("p",[s._v("电影厂商会拍摄电影，我们将这个场景抽象为一个接口。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public interface Movie {\n    void play();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("现在，一个美国电影厂商拍摄了钢铁侠这部电影，我们同样给抽象出来。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class IronManMovies implements Movie{\n    @Override\n    public void play() {\n        System.out.println("正在放映《钢铁侠》电影");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("如今电影上映了，如何让全国各地的观众都可以看到呢，于是电影厂商就\n委托全球各地的影院来作为代理，播放《钢铁侠》这部电影。")]),s._v(" "),a("p",[s._v('于是，我们抽象出一个Cinema影院类，该类(影院)也需要能够播放《钢铁侠》\n呀，于是我们让Cinema也实现movies接口，并提供一个有参构造，在"影院\n具体播放电影时"传入电影《钢铁侠》电影子类作为具体实现，这样我们\n就在不改变被代理类的基础上就完成了代理功能。')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class Cinema implements Movie{\n\n    private Movie movie;\n\n    public Cinema(Movie movie){\n        this.movie = movie;\n    }\n\n    @Override\n    public void play() {\n        movie.play();\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("测试类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class ProxyTest {\n    public static void main(String[] args) {\n        IronManMovies ironManMovies = new IronManMovies();\n        Cinema cinema = new Cinema(ironManMovies);\n        cinema.play();\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("正在放映《钢铁侠》电影\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"代理功能增强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理功能增强"}},[s._v("#")]),s._v(" 代理功能增强")]),s._v(" "),a("p",[s._v('以上就完成了"电影"的代理操作，但是我们可以看到，代理类和被代理类\n的功能是完全一致的，被代理类除了不想或者不能被直接使用的情况下，我们\n需要借助代理类来起到一个中介的作用，这个操作的同时，往往伴随着\n被代理类的功能增强。')]),s._v(" "),a("p",[s._v("同样是上面电影厂商的场景，电影厂商此时要求到，我们钢铁侠这次播出完了，\n于此同时我们紧接着就要拍摄《美国队长》，我们要求所有代理播放《钢铁侠》\n的影院在电影播放完成后插播我们的《美国队长》的彩蛋，起到一个广告效应。")]),s._v(" "),a("p",[s._v("那么，我们要如何实现这种功能呢？")]),s._v(" "),a("p",[s._v("我们修改上述的Cinema类。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    @Override\n    public void play() {\n        movie.play();\n        moviesAdvertisement();\n    }\n\n    public void moviesAdvertisement(){\n        System.out.println("现在是电影广告时间，我们将在7月份上映《美国队长》，敬请期待~");\n    }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("测试类不变，输出如下。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("正在放映《钢铁侠》电影\n现在是电影广告时间，我们将在7月份上映《美国队长》，敬请期待~\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("此时，我们对被代理类实现了功能增强。\n这种方式也被称作为静态代理。")]),s._v(" "),a("p",[s._v("为什么被称为静态呢？应为我们的代理类在程序编译期就已经确定了，\n代理类和被代理类都实现了同一个接口。由此我们也可以分析到静态代理\n的优点和缺点。")]),s._v(" "),a("p",[s._v("优点：在不改变被代理类的基础上，我们可以调用目标类的方法，并完成\n一定的功能增强，符合开闭原则。"),a("br"),s._v("\n缺点：由于代理类要实现目标接口，当目标类较多的情况下，我们会产生\n大量的代理类，代码冗余且工作量大。")]),s._v(" "),a("p",[s._v("此时，可以举例说明，如今短视频盛行，我们同样抽象一个短视频接口。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public interface ShortVideo {\n    void play();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("其具体实现可以为西瓜视频、抖音短视频等，如今需要\n宣传一个明星的复出介绍，我们抽象出抖音短视频的具体实现。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class Douyin implements ShortVideo{\n    @Override\n    public void play() {\n        System.out.println("我是抖音短视频，正在播放吴思聪的复出介绍~");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("由于代理类和被代理类需要实现同一个接口，那么我们为了\n完成对短视频播放的代理功能，就需要重新实现一个代理类了。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public class DouYin implements ShortVideo{\n\n    private ShortVideo shortVideo;\n\n    public DouYin(ShortVideo shortVideo){\n        this.shortVideo = shortVideo;\n    }\n\n    @Override\n    public void play() {\n        shortVideo.play();\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("测试类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("        StarIntroduction starIntroduction = new StarIntroduction();\n        DouYin douYin = new DouYin(starIntroduction);\n        douYin.play();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("输出如下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("正在播放吴思聪的复出介绍~\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("以上就完成了短视频代理的实现，同样的，我们也可以对短视频代理进行共嗯\n增强。")]),s._v(" "),a("p",[s._v("我们修改短视频代理类如下所示。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    @Override\n    public void play() {\n        douyinAdvertisement();\n        shortVideo.play();\n    }\n\n    public void douyinAdvertisement(){\n        System.out.println("欢迎来抖音观看短视频，看视频赢大礼！");\n    }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("输出如下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("欢迎来抖音观看短视频，看视频赢大礼！\n正在播放吴思聪的复出介绍~\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("由此可以很明显看出静态代理的缺点，即由于代理类要实现目标接口，\n当目标类较多的情况下，我们会产生大量的代理类，代码冗余且工作量大。")]),s._v(" "),a("h3",{attrs:{id:"jdk动态代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdk动态代理"}},[s._v("#")]),s._v(" JDK动态代理")]),s._v(" "),a("p",[s._v("同样使用如上场景，我们可以如此实现代理类。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\n\npublic class JdkProxy implements InvocationHandler {\n\n    private Object object;\n\n    public JdkProxy(Object object){\n        this.object = object;\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        return method.invoke(object,args);\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("测试类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("        Movie movie = (Movie) Proxy.newProxyInstance(ironManMovies.getClass().getClassLoader(),\n                ironManMovies.getClass().getInterfaces(),\n                new JdkProxy(ironManMovies));\n\n        movie.play();\n\n        ShortVideo shortVideo = (ShortVideo) Proxy.newProxyInstance(starIntroduction.getClass().getClassLoader(),\n                starIntroduction.getClass().getInterfaces(),\n                new JdkProxy(starIntroduction));\n\n        shortVideo.play();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("正在放映《钢铁侠》电影\n正在播放吴思聪的复出介绍~\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如上就是JDK动态代理的实现了，其原理就是根据反射，在程序运行时\n动态生成具体实现的子类。")]),s._v(" "),a("h3",{attrs:{id:"cglib动态代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cglib动态代理"}},[s._v("#")]),s._v(" CGLIB动态代理")]),s._v(" "),a("p",[s._v("CGLIB动态代理适用于没有接口存在场景下。")]),s._v(" "),a("p",[s._v("被代理类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class SpiderManMovies{\n    public void play() {\n        System.out.println("正在放映《蜘蛛侠》电影");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("代理类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import net.sf.cglib.proxy.MethodInterceptor;\nimport net.sf.cglib.proxy.MethodProxy;\n\nimport java.lang.reflect.Method;\n\npublic class CglibProxy implements MethodInterceptor {\n    @Override\n    public Object intercept(Object object, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {\n        return methodProxy.invokeSuper(object,args);\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("测试类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SpiderManMovies spiderManMovies = (SpiderManMovies) Enhancer.create(SpiderManMovies.class,\n    new CglibProxy());\nspiderManMovies.play();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("输出如下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("正在放映《蜘蛛侠》电影\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"模拟实现aop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟实现aop"}},[s._v("#")]),s._v(" 模拟实现AOP")]),s._v(" "),a("p",[s._v("现在有一个User接口")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("public interface UserService {\n    void delete();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("实现类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class UserServiceImpl implements UserService{\n    @Override\n    public void delete() {\n        System.out.println("已删除1条数据");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("我们现在要对这个类进行日志记录操作")]),s._v(" "),a("p",[s._v("BaseAspect类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import net.sf.cglib.proxy.MethodInterceptor;\nimport net.sf.cglib.proxy.MethodProxy;\n\nimport java.lang.reflect.Method;\n\npublic abstract class BaseAspect implements MethodInterceptor {\n\n    @Override\n    public Object intercept(Object object, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {\n\n        if (isInterceptor(method)){\n            before();\n            methodProxy.invokeSuper(object,args);\n            after();\n        }else\n            methodProxy.invokeSuper(object,args);\n        return object;\n    }\n\n    public void before(){\n\n    }\n\n    public void after(){\n\n    }\n\n    public abstract boolean isInterceptor(Method method);\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("日志切面类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import java.lang.reflect.Method;\n\npublic class LogAspect extends BaseAspect{\n    @Override\n    public boolean isInterceptor(Method method) {\n        return method.getName().equals("delete");\n    }\n\n    public void before(){\n        System.out.println("删除方法开始...");\n    }\n\n    public void after(){\n        System.out.println("删除方法结束...");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("测试类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import net.sf.cglib.proxy.Enhancer;\n\npublic class AopTest {\n    public static void main(String[] args) {\n        UserServiceImpl user = (UserServiceImpl) Enhancer.create(UserServiceImpl.class,new LogAspect());\n        user.delete();\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("输出")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("删除方法开始...\n已删除1条数据\n删除方法结束...\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("其中用到了模板方法模式。")])])}),[],!1,null,null,null);n.default=t.exports}}]);